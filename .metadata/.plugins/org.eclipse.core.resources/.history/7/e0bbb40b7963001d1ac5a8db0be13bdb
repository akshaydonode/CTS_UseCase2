package com.cts.dataloader.services;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.function.Supplier;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

@Service
public class PatientServiceImpl implements PatientService {

	@Override
	public String patientData(MultipartFile excelFile) {

		try {

			Path tempDir = Files.createTempDirectory("");

			File tempFile = tempDir.resolve(excelFile.getOriginalFilename()).toFile();

			excelFile.transferTo(tempFile);

			Workbook workbook = WorkbookFactory.create(tempFile);

			Sheet sheet = workbook.getSheetAt(0);

			Stream<Row> rowStream = StreamSupport.stream(sheet.spliterator(), false);

			rowStream.forEach(row -> {
				
				//for skipping first row
				if (row.getRowNum() == 0) {
					return;
				}
				Stream<Cell> cellStream = StreamSupport.stream(row.spliterator(), false);

				List<Object> cellVals = cellStream.map(cell -> {

					// getting column number
					int cellVal = cell.getColumnIndex();

					if (cellVal == 0) {
						String cellVal1 = cell.getStringCellValue();
						System.out.println(cellVal1);

						// return cellVal1;
					} else if (cellVal == 1) {
						String cellVal1 = cell.getStringCellValue();
						System.out.println(cellVal1);

						// return cellVal1;
					} else if (cellVal == 2) {
						Date cellVal1 = cell.getDateCellValue();
						System.out.println(cellVal1);

						// return cellVal1;
					} else if (cellVal == 3) {
						String cellVal1 = cell.getStringCellValue();
						// return cellVal1;
					} else if (cellVal == 4) {
						Double cellVal1 = cell.getNumericCellValue();
						// return cellVal1;
					} else if (cellVal == 5) {
						Double cellVal1 = cell.getNumericCellValue();
						// return cellVal1;
					} else if (cellVal == 6) {
						String cellVal1 = cell.getStringCellValue();
						// return cellVal1;
					}
					System.out.println(cellVal);
					return cellVal;

//					String cellVal = cell.getStringCellValue();
					// return cellVal;
				}).collect(Collectors.toList());

				System.out.println(cellVals);
			});

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return null;

	}

}
